name: Automated Weekly Build

on:
  schedule:
    - cron: "0 0 * * 0" # Runs every Sunday at midnight
  workflow_dispatch:

permissions:
  contents: write # needed for pushing branches and creating PRs

jobs:
  generate-branch-name:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.out.outputs.branch }}
    steps:
      - name: Generate weekly update branch name
        id: out
        run: |
          BRANCH="weekly-update-$(date +%Y%m%d)"
          echo "branch=$BRANCH" >> "$GITHUB_OUTPUT"

  generate-image-directory-list:
    runs-on: ubuntu-latest
    needs: generate-branch-name
    outputs:
      image_dirs: ${{ steps.list.outputs.image_dirs }}
    steps:
      - uses: actions/checkout@v4

      - name: Generate image directory list
        id: list
        run: |
          image_dirs=$(find images -mindepth 1 -maxdepth 1 -type d -exec basename {} \; | jq -R . | jq -cs .)
          echo "image_dirs=$image_dirs" >> "$GITHUB_OUTPUT"

  build:
    needs:
      - generate-branch-name
      - generate-image-directory-list
    strategy:
      matrix:
        image: ${{ fromJson(needs.generate-image-directory-list.outputs.image_dirs) }}
    uses: ./.github/workflows/_build-and-push.yaml
    with:
      image: ${{ matrix.image }}
      # Provide both to satisfy whichever the reusable workflow expects
      branch: ${{ needs.generate-branch-name.outputs.branch }}
      docker_build_branch: ${{ needs.generate-branch-name.outputs.branch }}
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

  check-changes:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      should_continue: ${{ steps.diff.outputs.should_continue }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for build-info.json changes
        id: diff
        run: |
          git fetch origin main
          if git diff --quiet origin/main -- build-info.json; then
            echo "No changes"
            echo "should_continue=false" >> "$GITHUB_OUTPUT"
          else
            echo "Changes detected"
            echo "should_continue=true" >> "$GITHUB_OUTPUT"
          fi

  prepare-commit:
    runs-on: ubuntu-latest
    needs:
      - generate-branch-name
      - build
      - check-changes
    if: needs.check-changes.outputs.should_continue == 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git config
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Create and checkout branch from origin/main
        run: |
          git fetch origin main
          git checkout -B "${{ needs.generate-branch-name.outputs.branch }}" origin/main

      - name: Squash commits into one and push
        run: |
          git reset --soft "$(git merge-base origin/main HEAD)"
          git commit -m "chore: weekly image update on $(date +%F)" || echo "Nothing to commit"
          git push --set-upstream origin HEAD

  create-pr:
    needs:
      - generate-branch-name
      - check-changes
      - prepare-commit
    if: needs.check-changes.outputs.should_continue == 'true' && success()
    permissions:
      contents: write
      pull-requests: write
    uses: ./.github/workflows/_create_pr.yaml
    with:
      branch: ${{ needs.generate-branch-name.outputs.branch }}
      title: "chore: weekly image update"
      body: "This PR includes all image updates generated by the weekly workflow."
    secrets:
      ADMIN_TOKEN: ${{ secrets.ADMIN_TOKEN }}
